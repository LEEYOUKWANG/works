library(dplyr)
korpop1 <- rename(korpop1,
pop=총인구_명,
name=행정구역별_읍변동)
class(korpop1)
table(korpop1)
install.packages("devtools")
korpop1 <- rename(korpop1,
pop=총인구_명,
name=행정구역별_읍변동)
table(korpop1)
stsr(changeCode(kormap1))
str(changeCode(kormap1))
install.packages("stringi")
install.packages("devtools")
#위 패키지는 R 패키지등을 깃허브에서 가져올 수 있는 건
devtools::install_github("cardiomoon/kormaps2014")
library(kormaps2014)
install.packages("devtools")
str(changeCode(korpop1))
korpop1
library(dplyr)
korpop1 <- rename(korpop1,
pop=총인구_명,
name=행정구역별_읍변동)
class(korpop1)
table(korpop1)
###################
str(changeCode(korpop1))
###################
str(changeCode(korpop1))
library(dplyr)
korpop1 <- rename(korpop1,
pop=총인구_명,
name=행정구역별_읍변동)
korpop1
library(kormaps2014)
devtools::install_github("cardiomoon/kormaps2014")
library(kormaps2014)
###################
str(changeCode(korpop1))
korpop1 <- rename(korpop1,
pop=총인구_명,
name=행정구역별_읍변동)
korpop1 <- rename(korpop1,
pop=총인구_명,
name=행정구역별_읍면동동동)
korpop1 <- rename(korpop1,
pop=총인구_명,
name=행정구역별_읍면동)
class(korpop1)
table(korpop1)
str(changeCode(kormap1))
class(korpop1)
ggChoropleth(data=korpop1,
aes(fill=pop,
map_id=code,
tooltip=name),
map=kormap1,
interactive = T)
library(mapdata)
library(mapdata)
ggChoropleth(data=korpop1,
aes(fill=pop,
map_id=code,
tooltip=name),
map=kormap1,
interactive = T
ggChoropleth(data=korpop1,
aes(fill=pop,
map_id=code,
tooltip=name),
map=kormap1,
interactive = T)
library(mapdata)
install.packages(mapdata)
install.packages("mapdata")
install.packages("mapdata")
library(mapdata)
ggChoropleth(data=korpop1,
aes(fill=pop,
map_id=code,
tooltip=name),
map=kormap1,
interactive = T)
ggChoropleth(data=korpop1,
aes(fill=pop,
map_id=code,
tooltip=name),
map=kormap1,
interactive = T)
ggChoropleth
library(mapproj)
(data=korpop1,
aes(fill=pop,
map_id=code,
tooltip=name),
map=kormap1,
interactive = T)
library(mapdata)
library(mapproj)
(data=korpop1,
aes(fill=pop,
map_id=code,
tooltip=name),
map=kormap1,
interactive = T)
library(mapdata)
library(mapdata)
(data=korpop1,
aes(fill=pop,
map_id=code,
tooltip=name),
map=kormap1,
interactive = T)
ggChoroplete(data=korpop1,
aes(fill=pop,
map_id=code,
tooltip=name),
map=kormap1,
interactive = T)
ggChoropleth(data=korpop1,
aes(fill=pop,
map_id=code,
tooltip=name),
map=kormap1,
interactive = T)
library(mapdata)
library(mapproj)
ggChoropleth(data=korpop1,
aes(fill=pop,
map_id=code,
tooltip=name),
map=kormap1,
interactive = T)
class(korpop1)
ggChoropleth(data=korpop1,
aes(fill=pop,
map_id=code,
tooltip=name),
map=kormap1,
interactive = T)
ggChoropleth(data=korpop1,
aes(fill=pop,
map_id=code,
tooltip=name),
map=kormap1,
interactive = T)
install.packages("ggiraph)
install.packages("mapdata")
library(mapdata)
library(mapproj)
install.packages("ggiraph)
install.packages("ggiraph)
ggChoropleth(data=korpop1,
aes(fill=pop,
map_id=code,
tooltip=name),
map=kormap1,
interactive = T)
install.packages("ggiraph")
ggChoropleth(data=korpop1,
aes(fill=pop,
map_id=code,
tooltip=name),
map=kormap1,
interactive = T)
ggChoropleth(data=korpop1,
aes(fill=pop,
map_id=code,
tooltip=name),
map=kormap1,
interactive = T)
library("ggiraph")
ggChoropleth(data=korpop1,
aes(fill=pop,
map_id=code,
tooltip=name),
map=kormap1,
interactive = T)
nstall.packages("mapdata")
library("mapdata")
library("mapproj")
install.packages("ggiraph")
library("ggiraph")
ggChoropleth(data=korpop1,
aes(fill=pop,
map_id=code,
tooltip=name),
map=kormap1,
interactive = T)
install.packages("ggiraph")
install.packages("mapdata")
ggChoropleth(data=korpop1,
aes(fill=pop,
map_id=code,
tooltip=name),
map=kormap1,
interactive = T)
ggChoropleth(data = korpop1,
aes(fill = pop,
map_id = code,
tooltip = name),
map = kormap1,
interactive = T)
ggChoropleth((data=korpop1,
ggChoropleth(data=korpop1,
aes(fill=pop,
map_id=code,
tooltip=name),
map=kormap1,
interactive = T)
install.packages("stringi")
install.packages("devtools")
#위 패키지는 R 패키지등을 깃허브에서 가져올 수 있는 건
devtools::install_github("cardiomoon/kormaps2014")
library(kormaps2014)
# UTF8을 CP949로 바꾸는 기본값
###################
str(changeCode(korpop1))
korpop1
library(dplyr)
korpop1 <- rename(korpop1,
pop=총인구_명,
name=행정구역별_읍면동)
class(korpop1)
table(korpop1)
str(changeCode(kormap1))
install.packages("mapdata")
install.packages("plotly")
library(plotly)
library(ggplot2)
p <- ggplot(data=mpg,aes(x=displ, y=hwy))+geom_point()
ggplotly(p)
p <- ggplot(data=mpg,aes(x=displ, y=hwy))+geom_point()
library(ggplot2)
p <- ggplot(data=mpg,aes(x=displ, y=hwy))+geom_point()
library(ggplot2)
p <- ggplot(data=mpg,aes(x=displ, y=hwy))+geom_point()
library(dygraphs)
install.packages("dygraphs")
data()
economics <- ggplot2::economics
head(economics)
library(xts)
install.packages("dygraphs")
library(dygraphs)
data()
economics <- ggplot2::economics
head(economics)
library(xts)
eco <- (economics$unemploy, order by = economics$date)
eco <- xts(economics$unemploy, order by = economics$date)
eco <-xts(economics$unemploy, order.by = economics$date)
head(eco)
dygraph(eco)%>% dyRangeSelector()
eco_a <- xts(economics$psaver, order(economics$data))
eco_a <- xts(economics$psaver, order(economics$data)
eco_a <- xts(economics$psaver, order(economics$date)
eco_b <- xts(economics$unemploy/1000, order.by=economics$date)
eco_a <- xts(economics$psaver, order.by=economics$date)
eco_a <- xts(economics$psavert, order.by=economics$date)
eco_b <- xts(economics$unemploy/1000, order.by=economics$date)
colnames(eco2) <- c("psavert","unemploy")
eco_2 <- cbind(eco_a, eco_b)
eco2 <- cbind(eco_a, eco_b)
head(eco2)
colnames(eco2) <- c("psavert","unemploy")
dygraph(eco2) %>% dyRangeSelector()
mpg <-  as.data.frame(ggplot2::mpg)
library(dplyr)
install.packages(dplyr)library(dplyr)
mpg <-  as.data.frame(ggplot2::mpg)
install.packages(dplyr)
library(dplyr)
install.package(dplyr)
install.packages(dplyr)
library(dplyr)
mpg_diff <- mpg %>%
select(class, cty) %>%
filter(class %in% c("compat","SUV"))
head(mpg_diff)
mpg <-  as.data.frame(ggplot2::mpg)
library(dplyr)
mpg_diff <- mpg %>%
select(class, cty) %>%
filter(class %in% c("compat","SUV"))
head(mpg_diff)
head(mpg_diff)
mpg <-as.data.frame(ggplot2::mpg)
library(dplyr)
mpg_diff <- mpg %>%
select(class, cty) %>%
filter(class %in% c("compact","SUV"))
head(mpg_diff)
table(mpg_diff$class)
table(mpg_diff$class)
mpg <-as.data.frame(ggplot2::mpg)
library(dplyr)
mpg_diff <- mpg %>%
select(class, cty) %>%
filter(class %in% c("compact","suv"))
head(mpg_diff)
table(mpg_diff$class)
t.test(data=mpg_diff,cty~class, var.equal=T)
cor.test(economics$unemploy, economics$oce)
cor.test(economics$unemploy, economics$pce)
head(mtcars)
car_cor <- cor(mtcars)
class(car_cor)
class(car_cor)
round(car_cor,2)
head(car_cor)
car_cor <- round(car_cor,2)
head(car_cor)
install.packages("corrplot")
corrplot(car_cor)
install.packages("corrplot")
library(corrplot)
corrplot(car_cor)
corrplot(car_cor, method ="number")
corrplot(car_cor,
method="color",
col=col(200),
type="lower",
order="hclust",
addCoef.col = "black",
tl.col = "tomato")
corrplot(car_cor,
method="color",
col=col(200),
type="lower",
order="hclust",
addCoef.col = "black",
tl.col = "skyblue")
corrplot(car_cor,
method="color",
col=col(200),
type="lower",
order="hclust",
addCoef.col = "black",
tl.col = "skyblue")
corrplot(car_cor,
method="color",
col=col(200),
type="lower",
order="hclust",
addCoef.col = "black",
tl.col = "skyblue",
tl.srt=45,
diag=F)
corrplot(car_cor,
method="color",
col=col(200),
type="lower",
order="hclust",
addCoef.col = "black",
tl.col = "skyblue",
tl.srt=45,
diag=F)
debugSource('C:/GB/New Project/script13.R', encoding = 'UTF-8', echo=TRUE)
install.packages("corrplot")
corrplot(car_cor, method ="number")
library(corrplot)
install.packages("corrplot")
library(corrplot)
corrplot(car_cor, method ="number")
install.packages("corrplot")
corrplot(car_cor, method ="number")
corrplot(car_cor)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
# T- Test & Correlation
##T 검정
###
t.test()로 데이터 분석 결과의 유의미성 판단단
t.test()로 데이터 분석 결과의 유의미성 판단
t.test()로 데이터 분석 결과의 *유의미성*을 판단
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
source('C:/GB/New Project/script14.R', encoding = 'UTF-8', echo=TRUE)
exam <- read.csv()
exam <- read.csv()
exam <- read.csv("csv_exam.csv")
# 내장함수
setwd("C:/GB/Doit_R_170717/Data")
exam <- read.csv("csv_exam.csv")
exam
class(exam)
exam[1,]
exam[2,]
exam[,1]
table(exam)
str(exam)
exam[1,"id"]
exam[exam$calss =1]
exam[exam$calss =1,]
exam[exam$calss ==1,]
exam[exam$calss ==1,]
exam[exam$math >=70,]
exam[exam$calss ==1,]
library(dplyr)
library(dplyr)
exam %>%
filter(exam$math >= 70)
exam[exam$class ==1 & exam$math >=70]
exam[exam$class ==1 & exam$math >=70, ]
exam[exam$class ==1 & exam$math >=70, ]
exam[exam$class ==1 & exam$math >=70,]
exam[exam$class ==1 & exam$math >=60,]
exam[exam$class ==1 | exam$math >=60,]
exam[exam$class ==1 | exam$math >=60,]
exam %>%
select("english") %>%
filter(math > 50)
exam %>%
select("english") %>%
filter(math > 30)
str(exam)
library(dplyr)
exam %>%
select("english") %>%
filter(math > 30)
exam %>%
filter(math > 30) %>%
select("english")
exam$tot <- (exam$math + exma$english + exam$science)
exam$tot <- (exam$math + exam$english + exam$science)
str(exam$tot)
summarise(mean(tot))
xam$tot <- (exam$math + exam$english + exam$science)
exam %>%
filter(math >= 50% english >=80) %>%
mutate(tot=(math+english+science)/3) %>%
group_by(class) %>%
summarise(mean(tot))
exam$tot <- (exam$math + exam$english + exam$science)
exam %>%
filter(math >= 50% english >=80) %>%
mutate(tot=(math+english+science)/3) %>%
group_by(class) %>%
summarise(mean(tot))
exam %>%
filter(math >= 50 & english >=80) %>%
mutate(tot=(math+english+science)/3) %>%
group_by(class) %>%
summarise(mean(tot))
mpg$tot <- (mpg$cty +mpg$hwy)/2
aggregate(data=mpg[mpg$class=="compcat" & mpg$class =="suv",])
aggregate(data=mpg[mpg$class=="compcat" & mpg$class =="suv",],tot~class,mean)
mpg$tot <- (mpg$cty +mpg$hwy)/2
mpg$tot
aggregate(data=mpg[mpg$class=="compcat" | mpg$class =="suv",],tot~class,mean)
aggregate(data=mpg[mpg$class=="compact" | mpg$class =="suv",],tot~class,mean)
var <- c(1,2,3,1,2)
var <- factor(c(1,2,3,1,2,))
var <- factor(c(1,2,3,1,2))
var1 <- c(1,2,3,1,2)
var2 <- factor(c(1,2,3,1,2))
var1
var2
var1+ 3
var2+3
table(var1)
table(var2)
mean(Var1)
mean(var1)
mean(var2)
b <- "hello"
b <- "hello"
b
class(a)
class(b)# data frame 행과 열 다양한 타입으로 구성
vector: 한가지 타입으로 구성
a <- 1
#vector: 한가지 타입으로 구성
a <- 1
class(a)
x2 <- matrix(c(1:12), ncol =2)
class(x2)
x2
#array :2차원 이상의 matrix 1가지 타입
x3 <-  array(1:20, dim= c(2,5,2))
x3
class(c3)
class(x3)
#list : 모든 데이터 구조 포함
x4 <-  list(f1=a, f2= head(mpg). f4=x2, f4-x4)
#list : 모든 데이터 구조 포함
x4 <-list(f1=a, f2= head(mpg). f4=x2, f4-x3)
#list : 모든 데이터 구조 포함
x4 <-list(f1=a,
f2= head(mpg),
f4=x2,
f4=x3)
x4
x4["f3",1]
boxplot(mpg$cty)$stats
x <- boxplot(mpg$cty)
x
install.packages(rvest)
install.packages(rvest)
library(rvest)
html <- read_html(urls[1])
urls <- www.naver.com
install.packages(rvest)
library(rvest)
html <- read_html(urls[1])
